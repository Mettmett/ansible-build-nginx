---
# tasks/main.yml

- name: Compile NGINX from sources
  hosts: all
  become: true
  tasks:
    - name: (sys) update host apt cache
      apt:
        update_cache: true
        cache_valid_time: 3600

    - name: (sys) install sys tools
      apt:
        name: "{{ item }}"
        state: present
        install_recommends: false
      loop:
        - tar
        - unzip
        - curl
        - git
        - rsync

    - name: (sys) install build tools
      apt:
        name: build-essential
        state: present
        install_recommends: false

    - name: (sys) install needed libs
      apt:
        name: "{{ item }}"
        state: present
        install_recommends: false
      loop:
        - libgeoip-dev
        - libxslt1-dev
        - libpcre3
        - libpcre3-dev
        - zlib1g-dev
        - libbz2-dev
        - libssl-dev

    - name: (build) cleaning old sources
      args:
        warn: false
      shell: |
        rm -fr /usr/src/nginx*
        rm -fr /usr/src/openssl*
        rm -fr /usr/src/ngx_brotli
        rm -fr /usr/src/naxsi  

    - name: (build) download nginx sources
      get_url:
        url: "https://nginx.org/download/{{ nginx_version }}.tar.gz"
        dest: "/usr/src/{{ nginx_version }}.tar.gz"
        remote_src: true
      register: nginx_source

    - name: (build) unpack nginx sources
      unarchive:
        copy: false
        dest: "/usr/src/{{ nginx_version }}"
        src: "{{ nginx_source.dest }}"
      when: nginx_source.changed
      register: nginx_source_unpack

    - name: (build) download latest OpenSSL
      git:
        repo: "https://github.com/openssl/openssl.git"
        dest: "/usr/src/openssl"
        version: "{{ openssl_version }}"

    - name: (build) download latest naxsi
      git:
        repo: "https://github.com/nbs-system/naxsi.git"
        dest: "/usr/src/naxsi"
        version: "master"

    - name: (build) download latest Brotli
      git:
        repo: "https://github.com/google/ngx_brotli.git"
        dest: "/usr/src/ngx_brotli"
        version: "master"
        # git submodule update --init

    - name: (build) download latest nginx module headers_more
      unarchive:
        src: "https://github.com/openresty/headers-more-nginx-module/archive/v0.33.tar.gz"
        dest: "/usr/src/headers-more-nginx-module-0.33"
        remote_src: true

    - name: (build) configure nginx sources
      command: "./configure {{ nginx_openssl_module }} --with-ld-opt=-lrt {{ nginx_cache_conf_dir }} --user={{ nginx_user }} --group={{ nginx_user }} --prefix={{ nginx_conf_dir }} --error-log-path={{ nginx_var_log_dir }}/nginx-error.log --http-log-path={{ nginx_var_log_dir }}/nginx-access.log --sbin-path=/usr/sbin/nginx --conf-path={{ nginx_conf_dir }}/nginx.conf {{ nginx_misc_modules }} {{ nginx_headers_more_module }} {{ nginx_brotli_module }} {{ nginx_naxsi_module }}"
      args:
        chdir: "{{ nginx_source.dest }}"
      when: nginx_source_unpack|changed
      register: nginx_configure

    - name: (build) make nginx sources great again
      shell: "make && make install"
      args:
        chdir: "{{ nginx_source.dest }}"
      when: nginx_configure|changed

    - name: (build) Adding some Naxsi core rules from sources
      copy:
        src: "/usr/src/naxsi/naxsi_config/naxsi_core.rules"
        dest: "/etc/nginx/naxsi_core.rules"
        owner: "root"
        group: "root"
        mode: u+rw,g-wx,o-wx

    - name: (sys) remove previous systemd unit file if exists
      file:
        path: "/lib/systemd/system/nginx.service"
        state: absent

    - name: (sys) installing systemd unit
      template:
        src: "{{ lookup('file'), {{ playbook_dir }}/templates/nginx.service.j2') }}"
        dest: "/lib/systemd/system/nginx.service"
        owner: "root"
        group: "root"
        mode: a+x

    - name: (sys) enabling nginx systemd unit file
      systemd:
        name: "nginx"
        enabled: true
        masked: false

    - name: (sys) install logrotate
      apt:
        name: "logrotate"
        state: present
        install_recommends: false

    - name: (sys) remove previous nginx logrotate configuration file if exists
      file:
        path: "/etc/logrotate/nginx"
        state: absent

    - name: (sys) installing our nginx logrotate configuration
      template:
        src: "{{ lookup('file'), {{ playbook_dir }}/templates/logrotate.nginx.j2') }}"
        dest: "/etc/logrotate/nginx"
        owner: "root"
        group: "root"
        mode: u+rw,g-wx,o-wx

    - name: (sys) installing our nginx configuration
      template:
        src: "{{ lookup('file'), {{ playbook_dir }}/templates/nginx.conf.j2') }}"
        dest: "/etc/nginx/nginx.conf"
        owner: "root"
        group: "root"
        mode: u+rw,g-wx,o-wx

    - name: (sys) create needed folders for nginx configuration
      file:
        path: "/etc/nginx/{{ items }}"
        state: directory
        mode: "0755"
      with_items:
        - conf.d
        - sites-available
        - sites-enabled

    - name: (sys) create cache folder for nginx
      file:
        path: "/usr/local/etc/nginx"
        state: directory
        mode: "0755"

    - name: (sys) start nginx to the moon
      systemd:
        name: "nginx"
        state: restarted
        dameon_reload: true

    - name: (sys) cleaning sources
      args:
        warn: false
      shell: "rm /usr/src/*.tar.gz"
